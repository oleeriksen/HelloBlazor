@page "/fetchdata"
@using HelloBlazor.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="More">More</button>
    <button @onclick="Less">Less</button>
    <div>Http.BaseAdr = @Http.BaseAddress.AbsolutePath</div>

}

@code {
    private WeatherForecast[]? forecasts;
    private List<WeatherForecast> cache = new List<WeatherForecast>();

    int amount = 2;

    protected override async Task OnInitializedAsync()
    {
        await Update();

    }

    async Task Update()
    {
        if (amount > cache.Count)
        {
            var newWf = await Http.GetFromJsonAsync<WeatherForecast[]>($"vejrudsigter/{amount - cache.Count}");
            cache.AddRange(newWf);
        }
        forecasts = cache.Take<WeatherForecast>(amount).ToArray();
    }

    async Task More()
    {
        amount++;
        await Update();
    }

    async Task Less()
    {
        if (amount > 1) amount--;
        await Update();

    }
}

